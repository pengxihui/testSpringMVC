<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd">   
        
        <!-- 加载数据库的属性配置文件 -->
	    <context:property-placeholder location="classpath:jdbc.properties" />
        <!-- mybatis 和 spring的整合 -->
        <!--1.druid 数据库连接池-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close"> 
		     <property name="url" value="${jdbc.url}" />
		     <property name="username" value="${jdbc.username}" />
		     <property name="password" value="${jdbc.password}" />
             <property name="driverClassName" value="${jdbc.driverClassName}"/>  
		     <property name="filters" value="stat" />
		     <property name="maxActive" value="100" />
		     <property name="initialSize" value="10" />
		     <property name="maxWait" value="60000" />
		     <property name="minIdle" value="10" />
		     <property name="maxIdle" value="15"/>
		     <property name="timeBetweenEvictionRunsMillis" value="60000" />
		     <property name="minEvictableIdleTimeMillis" value="300000" />
		     <property name="validationQuery" value="SELECT 'x'"/>
		     <property name="testWhileIdle" value="true" />
		     <property name="testOnBorrow" value="false" />
		     <property name="testOnReturn" value="false" />
		     <property name="poolPreparedStatements" value="true" />
		     <property name="maxOpenPreparedStatements" value="20" />
		 </bean>
		 <!-- 2：引用数据源 -->
         <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
             <property name="dataSource" ref="dataSource"/>
             <property name="configLocation" value="classpath:mybatis-config.xml" />
         </bean>
         <!-- 3. Mybatis自动扫描加载Sql映射文件/接口：MapperScannerConfigurer sqlSessionFactory   
            basePackage:指定sql映射文件/接口所在的包（自动扫描） -->  
	     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	         <property name="basePackage" value="com.*.mapper"/>  
	         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
	     </bean> 
	     <!-- 4.事务管理  引用上面定义好的数据源 -->
	     <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	         <property name="dataSource" ref="dataSource"/>
	     </bean>
	     <!-- 5.使用声明式事务： transaction-manager = "transactionManager" tx:advice 这种 是用 aop方式管理事物   
	        annotation-driven 这种是注解方式管理事物 第一种方式，需要在spring配置文件配置一些参数 第二种方式，需要在 类里 加一些注解进行事物管理   
	                  用一种就行，没必须都用 -->  
	     <tx:annotation-driven transaction-manager="transactionManager" /> 
</beans>